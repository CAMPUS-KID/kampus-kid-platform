version: '3.9'

services:
# DATABASES
  db-grade:
    container_name: db-grade
    image: postgres
    ports:
      - 4006:5432
    restart: always
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_USER: root
      POSTGRES_DB: db_grade
      PGPASSWORD: 1234
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-U",
          "root",
          "-d",
          "db_grade"
        ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    extra_hosts:
      - "host.docker.internal:host-gateway"
  db-subject:
    container_name: db-subject
    image: mysql
    ports:
      - 4007:3306
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: db_subject
      MYSQL_ROOT_HOST: '%'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    extra_hosts:
      - "host.docker.internal:host-gateway"
  db-auth:
    container_name: db-auth
    image: mongo
    restart: always
    ports:
      - 4008:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 1234
      MONGO_INITDB_DATABASE: db_auth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s
    extra_hosts:
      - "host.docker.internal:host-gateway"
# MICROSERVICES
  ms-campus-kid-auth:
    container_name: ms-campus-kid-auth
    build: ./ms-campus-kid-auth
    depends_on:
      db-auth:
        condition: service_healthy
    links:
      - db-auth
    ports:
      - 4000:4000
    environment:
      - PORT=4000
      - DB_HOST=host.docker.internal
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=db_auth
      - DB_PORT=4008
      - NODE_ENV=staging
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ms-campus-kid-grades:
    container_name: ms-campus-kid-grades
    build: ./ms-campus-kid-grades
    depends_on:
      db-grade:
        condition: service_healthy
    links:
      - db-grade
    ports:
      - 4001:4001
    environment:
      - PORT=4001
      - SECRET_KEY=1234P
      - DB_HOST=host.docker.internal
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=db_grade
      - DB_PORT=4006
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ms-campus-kid-schedule:
    container_name: ms-campus-kid-schedule
    build: ./ms-campus-kid-schedule
    depends_on:
      db-grade:
        condition: service_healthy
    links:
      - db-grade
    ports:
      - 4003:4003
    environment:
      - PORT=4003
      - DB_HOST=host.docker.internal
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_NAME=db_grade
      - DB_PORT=4006
      - NODE_ENV=staging
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ms-campus-kid-school:
    container_name: ms-campus-kid-school
    build: ./ms-campus-kid-school
    depends_on:
      db-subject:
        condition: service_healthy
    links:
      - db-subject
    ports:
      - 4004:4004
    environment:
      - PORT=4004
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_HOST=host.docker.internal
      - DB_PORT=4007
      - DB_NAME=db_subject
    extra_hosts:
      - "host.docker.internal:host-gateway"
  ms-campus-kid-subjects:
    container_name: ms-campus-kid-subjects
    build: ./ms-campus-kid-subjects
    depends_on:
      db-subject:
        condition: service_healthy
    links:
      - db-subject
    ports:
      - 4005:80
    environment:
      - PORT=4005
      - DB_USER=root
      - DB_PASSWORD=1234
      - DB_HOST=host.docker.internal
      - DB_PORT=4007
      - DB_NAME=db_subject
    extra_hosts:
      - "host.docker.internal:host-gateway"
# MESSAGE QUEUE
  localstack:
    container_name: localstack
    image: localstack/localstack
    ports:
      - "4567-4584:4567-4584"
      - "4009:8080"
      - "4010:4566"
    environment:
      - SERVICES=sqs,dynamodb
      - PORT_WEB_UI=8080
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=us-east-2
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - "~/tmp/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"   
    healthcheck:
      test:
        - CMD
        - bash
        - -c
        - awslocal dynamodb list-tables
          && awslocal sqs list-queues
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    extra_hosts:
      - "host.docker.internal:host-gateway"
# API_GATEWAY
  ag-campus-kid:
    container_name: ag-campus-kid
    build: ./ag-campus-kid
    ports:
      - 4011:4011
    environment:
      - PORT=4011
      - NODE_ENV=staging
    extra_hosts:
      - "host.docker.internal:host-gateway"
# APPS
  app-campus-kid-admin:
    container_name: app-campus-kid-admin
    build: ./app-campus-kid-admin
    ports:
      - 4012:4012
    environment:
      - PORT=4012
      - NODE_ENV=staging
      - REACT_APP_API_URL=https://host.docker.internal:4101/api
    extra_hosts:
      - "host.docker.internal:host-gateway"
# SETUP CONTAINERS 
  setup-localstack:
    container_name: localstack-setup
    image: cgswong/aws
    command: sh /init-localstack.sh
    environment:
    - "AWS_ACCESS_KEY_ID=dummy-key-id"
    - "AWS_SECRET_ACCESS_KEY=dummy-secret-key"
    - "AWS_REGION=us-east-2"
    depends_on:
      localstack:
        condition: service_healthy
    links:
      - localstack
    volumes:
      - "./scripts/init-localstack.sh:/init-localstack.sh"  
# REVERSE-PROXY-API-GATEWAY
  proxy-campus-kid-ag:
    container_name: proxy-campus-kid-ag
    build: ./proxy-campus-kid-ag
    ports:
      - 4101:4101
    environment:
      - PORT=4101
      - HOST=host.docker.internal
      - HOST_PORT=4011
    extra_hosts:
      - "host.docker.internal:host-gateway"
# REVERSE-PROXY-WEB-APP
  proxy-campus-kid-web-app:
    container_name: proxy-campus-kid-web-app
    build: ./proxy-campus-kid-web-app
    ports:
      - 4102:4102
    environment:
      - PORT=4102
      - HOST=host.docker.internal
      - HOST_PORT=4012
    extra_hosts:
      - "host.docker.internal:host-gateway"
# LDAP
  ldap-campus-kid:
    image: osixia/openldap:1.1.8
    container_name: ldap-campus-kid
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "campus-kid"
      LDAP_DOMAIN: "unal.edu.co"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - /var/lib/ldap
      - /etc/ldap/slapd.d
      - /container/service/slapd/assets/certs/
    ports:
      - "4111:4111"
      - "4112:4112"
    hostname: "unal.edu.co"
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: ldap_client
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "ldap-campus-kid"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "4114:80"
    links:
      - ldap-campus-kid
