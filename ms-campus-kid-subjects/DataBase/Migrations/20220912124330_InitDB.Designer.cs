// <auto-generated />
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(SubjectsContext))]
    [Migration("20220912124330_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataBase.Career", b =>
                {
                    b.Property<string>("id_career")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("career_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("id_faculty")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id_career");

                    b.HasIndex("id_faculty");

                    b.ToTable("Career", (string)null);
                });

            modelBuilder.Entity("DataBase.Course", b =>
                {
                    b.Property<string>("id_course")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("course_description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("course_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("id_faculty")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id_course");

                    b.HasIndex("id_faculty");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.Property<string>("id_faculty")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("faculty_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("id_site")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id_faculty");

                    b.HasIndex("id_site");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("DataBase.Site", b =>
                {
                    b.Property<string>("id_site")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("site_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id_site");

                    b.ToTable("Site", (string)null);
                });

            modelBuilder.Entity("DataBase.Career", b =>
                {
                    b.HasOne("DataBase.Faculty", "faculty")
                        .WithMany("careers")
                        .HasForeignKey("id_faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("faculty");
                });

            modelBuilder.Entity("DataBase.Course", b =>
                {
                    b.HasOne("DataBase.Faculty", "Faculty")
                        .WithMany("courses")
                        .HasForeignKey("id_faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.HasOne("DataBase.Site", "Site")
                        .WithMany("faculties")
                        .HasForeignKey("id_site")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.Navigation("careers");

                    b.Navigation("courses");
                });

            modelBuilder.Entity("DataBase.Site", b =>
                {
                    b.Navigation("faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
