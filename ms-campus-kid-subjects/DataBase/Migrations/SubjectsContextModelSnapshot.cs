// <auto-generated />
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBase.Migrations
{
    [DbContext(typeof(SubjectsContext))]
    partial class SubjectsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataBase.Career", b =>
                {
                    b.Property<int>("Id_Career")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Career_Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Id_Faculty")
                        .HasColumnType("int");

                    b.HasKey("Id_Career");

                    b.HasIndex("Id_Faculty");

                    b.ToTable("Career", (string)null);
                });

            modelBuilder.Entity("DataBase.Course", b =>
                {
                    b.Property<int>("Id_Course")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Course_Code")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Course_Description")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<string>("Course_Name")
                        .IsRequired()
                        .HasColumnType("varchar(64)");

                    b.Property<int>("Id_Faculty")
                        .HasColumnType("int");

                    b.HasKey("Id_Course");

                    b.HasIndex("Id_Faculty");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.Property<int>("Id_Faculty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Faculty_Code")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Faculty_Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Id_Site")
                        .HasColumnType("int");

                    b.HasKey("Id_Faculty");

                    b.HasIndex("Id_Site");

                    b.ToTable("Faculty", (string)null);
                });

            modelBuilder.Entity("DataBase.Site", b =>
                {
                    b.Property<int>("Id_Site")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Site_Code")
                        .IsRequired()
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Site_Name")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id_Site");

                    b.ToTable("Site", (string)null);
                });

            modelBuilder.Entity("DataBase.Career", b =>
                {
                    b.HasOne("DataBase.Faculty", "Faculty")
                        .WithMany("careers")
                        .HasForeignKey("Id_Faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("DataBase.Course", b =>
                {
                    b.HasOne("DataBase.Faculty", "Faculty")
                        .WithMany("courses")
                        .HasForeignKey("Id_Faculty")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Faculty");
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.HasOne("DataBase.Site", "Site")
                        .WithMany("faculties")
                        .HasForeignKey("Id_Site")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });

            modelBuilder.Entity("DataBase.Faculty", b =>
                {
                    b.Navigation("careers");

                    b.Navigation("courses");
                });

            modelBuilder.Entity("DataBase.Site", b =>
                {
                    b.Navigation("faculties");
                });
#pragma warning restore 612, 618
        }
    }
}
